<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta
      name="description"
      content="nossl.sh helps you diagnose no SSL connection issues, check your Wi-Fi, verify internet access, troubleshoot captive portal login pages, and inspect the headers your device sends."
    />
    <meta
      name="keywords"
      content="no ssl, nossl, never ssl alternative, captive portal login, hotel wifi login, airport wifi, coffee shop wifi, http test page"
    />
    <meta property="og:title" content="nossl.sh - Connection &amp; Header Diagnostics" />
    <meta
            property="og:description"
            content="nossl.sh helps you diagnose no SSL connection issues, check your Wi-Fi, verify internet access, troubleshoot captive portal login pages, and inspect the headers your device sends."
    />
    <meta property="og:type" content="website" />
    <meta property="og:url" content="http://nossl.sh/" />
    <meta property="og:site_name" content="nossl.sh" />
    <meta property="og:image" content="/static/og-image.png" />
    <meta property="og:image:alt" content="Abstract teal and navy banner for nossl.sh" />
    <meta property="og:image:width" content="1200" />
    <meta property="og:image:height" content="630" />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content="nossl.sh - Connection &amp; Header Diagnostics" />
    <meta
            name="twitter:description"
            content="nossl.sh helps you diagnose no SSL connection issues, check your Wi-Fi, verify internet access, troubleshoot captive portal login pages, and inspect the headers your device sends."
    />
    <meta name="twitter:image" content="/static/og-image.png" />
    <meta name="twitter:image:alt" content="Abstract teal and navy banner for nossl.sh" />
    <title>nossl.sh - Connection &amp; Header Diagnostics</title>
    <link rel="icon" href="/favicon.ico" type="image/svg+xml" />
    <link rel="stylesheet" href="/static/styles.css" />
  </head>
  <body>
    <header class="top-bar">
      <div class="container top-bar__inner">
        <div class="branding" role="banner">
          <span class="logo" aria-hidden="true">●</span>
          <div class="branding__copy">
            <span class="brand-name">nossl.sh</span>
            <span class="brand-status">You're online</span>
          </div>
        </div>
        <p class="top-bar__hint">Plain HTTP diagnostics for captive portals &amp; restricted networks</p>
      </div>
    </header>

    <main class="container dashboard">
      <section aria-labelledby="connection-info" class="panel panel--connection">
        <header class="panel__header">
          <h2 id="connection-info">Connection snapshot</h2>
          <span class="status <%= scheme === 'https' ? 'secure' : 'insecure' %>">
            <%= status %>
          </span>
        </header>

        <p class="panel__summary">
          Request served over <strong><%= scheme.toUpperCase() %></strong>. These numbers refresh each time you load the page.
        </p>

        <dl class="connection-grid">
          <div>
            <dt>Connection type</dt>
            <dd><%= scheme.toUpperCase() %></dd>
          </div>
          <div>
            <dt>Client IP</dt>
            <dd class="mono"><%= clientIp %></dd>
          </div>
          <div>
            <dt>Page timestamp</dt>
            <dd class="mono"><%= generatedAt.toISOString().replace('T', ' ').replace(/\..+/, ' UTC') %></dd>
          </div>
          <div>
            <dt>Ping time</dt>
            <dd class="mono" data-api-latency aria-live="polite">Measuring…</dd>
          </div>
        </dl>
      </section>

      <section aria-labelledby="request-headers" class="panel panel--headers">
        <header class="panel__header">
          <div>
            <h2 id="request-headers">Request headers</h2>
            <p class="panel__summary">Compact view of the headers we saw from your device.</p>
          </div>
          <button type="button" class="copy" data-copy-headers>
            Copy as JSON
          </button>
        </header>
        <div class="table-wrapper">
          <table>
            <thead>
              <tr>
                <th scope="col">Header</th>
                <th scope="col">Value</th>
              </tr>
            </thead>
            <tbody>
              <% headers.forEach(([key, value]) => { %>
              <tr>
                <th scope="row"><%= key %></th>
                <td><%= value %></td>
              </tr>
              <% }) %>
            </tbody>
          </table>
        </div>
      </section>

      <section aria-labelledby="how-to" class="panel panel--actions">
        <header class="panel__header">
          <h2 id="how-to">Quick actions</h2>
        </header>
        <div class="actions-grid">
          <div>
            <h3>Test with curl</h3>
            <p>Verify plain HTTP access from your shell:</p>
            <div class="code-snippet" data-curl-snippet>
              <button
                type="button"
                class="copy copy--snippet"
                data-copy-curl
                aria-label="Copy curl command"
              >
                Copy
              </button>
              <pre><code>curl http://nossl.sh</code></pre>
            </div>
          </div>
          <div>
            <h3>Up next</h3>
            <p class="panel__summary">
              Geo IP lookups, connection speed checks, and other insight cards will live here soon. The layout is ready for more
              data without adding clutter.
            </p>
          </div>
        </div>
      </section>

      <section aria-labelledby="usage-information" class="panel panel--support">
        <header class="panel__header">
          <h2 id="usage-information">Why this page exists</h2>
        </header>
        <div class="panel__body">
          <p>
            Inspired by NeverSSL, nossl.sh is a quick diagnostic checkpoint when captive portals or restrictive firewalls block
            HTTPS handshakes. Load this page to trigger splash screens and inspect what your device sends.
          </p>
          <p>
            Still stuck? Confirm your Wi-Fi link, temporarily disable VPNs, or retry after clearing custom DNS profiles.
          </p>
          <p>
            Keep this URL handy for smart TVs, consoles, or travel routers that need an HTTP-only landing page to finish login
            flows.
          </p>
        </div>
      </section>
    </main>

    <footer>
      <div class="container">
        <p>Page generated at <%= generatedAt.toISOString().replace('T', ' ').replace(/\..+/, ' UTC') %>.</p>
        <p>
          Prefer JSON? Try the
          <a href="/api/request-info" rel="nofollow">request info API endpoint</a>.
        </p>
      </div>
    </footer>
    <script>
      const latencyEl = document.querySelector('[data-api-latency]');
      const headersCopyButton = document.querySelector('[data-copy-headers]');
      const curlCopyButton = document.querySelector('[data-copy-curl]');

      if (latencyEl) {
        const startedAt = performance.now();
        fetch('/api/request-info', { headers: { Accept: 'application/json' } })
          .then((response) => {
            const elapsed = Math.round(performance.now() - startedAt);
            latencyEl.textContent = `${elapsed} ms`;

            if (!response.ok) {
              throw new Error('Response not OK');
            }
          })
          .catch(() => {
            latencyEl.textContent = 'Unable to measure';
          });
      }

      if (headersCopyButton) {
        const headerPairs = <%- JSON.stringify(headers) %>;
        const headersPayload = headerPairs.reduce((acc, [key, value]) => {
          if (acc[key]) {
            acc[key] = Array.isArray(acc[key]) ? [...acc[key], value] : [acc[key], value];
          } else {
            acc[key] = value;
          }
          return acc;
        }, {});

        headersCopyButton.addEventListener('click', async () => {
          try {
            await navigator.clipboard.writeText(JSON.stringify(headersPayload, null, 2));
            headersCopyButton.textContent = 'Copied!';
            setTimeout(() => {
              headersCopyButton.textContent = 'Copy as JSON';
            }, 2000);
          } catch (error) {
            headersCopyButton.textContent = 'Copy failed';
            setTimeout(() => {
              headersCopyButton.textContent = 'Copy as JSON';
            }, 2000);
          }
        });
      }

      if (curlCopyButton) {
        const commandElement = document.querySelector('[data-curl-snippet] code');
        const curlCommand = commandElement?.textContent.trim() || 'curl http://nossl.sh';
        const resetLabel = () => {
          curlCopyButton.textContent = 'Copy';
        };

        curlCopyButton.addEventListener('click', async () => {
          try {
            await navigator.clipboard.writeText(curlCommand);
            curlCopyButton.textContent = 'Copied!';
            setTimeout(resetLabel, 2000);
          } catch (error) {
            curlCopyButton.textContent = 'Copy failed';
            setTimeout(resetLabel, 2000);
          }
        });
      }
    </script>
  </body>
</html>

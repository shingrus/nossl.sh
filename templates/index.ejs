<%
  const headersObject = Object.fromEntries(headers);
  const highlightOrder = [
    'host',
    'user-agent',
    'accept',
    'accept-language',
    'accept-encoding',
    'connection',
    'x-forwarded-for',
    'cf-connecting-ip',
  ];
  const primaryHeaders = [];
  const pickedKeys = new Set();

  highlightOrder.forEach((target) => {
    const match = headers.find(([key]) => key.toLowerCase() === target);
    if (match && !pickedKeys.has(match[0])) {
      primaryHeaders.push(match);
      pickedKeys.add(match[0]);
    }
  });

  headers.forEach(([key, value]) => {
    if (primaryHeaders.length < 6 && !pickedKeys.has(key)) {
      primaryHeaders.push([key, value]);
      pickedKeys.add(key);
    }
  });

  const secondaryHeaders = headers.filter(([key]) => !pickedKeys.has(key));
%>
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta
      name="description"
      content="nossl.sh helps you diagnose no SSL connection issues, check your Wi-Fi, verify internet access, troubleshoot captive portal login pages, and inspect the headers your device sends."
    />
    <meta
      name="keywords"
      content="no ssl, nossl, never ssl alternative, captive portal login, hotel wifi login, airport wifi, coffee shop wifi, http test page"
    />
    <meta property="og:title" content="nossl.sh - Connection &amp; Header Diagnostics" />
    <meta
            property="og:description"
            content="nossl.sh helps you diagnose no SSL connection issues, check your Wi-Fi, verify internet access, troubleshoot captive portal login pages, and inspect the headers your device sends."
    />
    <meta property="og:type" content="website" />
    <meta property="og:url" content="http://nossl.sh/" />
    <meta property="og:site_name" content="nossl.sh" />
    <meta property="og:image" content="/static/og-image.png" />
    <meta property="og:image:alt" content="Abstract teal and navy banner for nossl.sh" />
    <meta property="og:image:width" content="1200" />
    <meta property="og:image:height" content="630" />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content="nossl.sh - Connection &amp; Header Diagnostics" />
    <meta
            name="twitter:description"
            content="nossl.sh helps you diagnose no SSL connection issues, check your Wi-Fi, verify internet access, troubleshoot captive portal login pages, and inspect the headers your device sends."
    />
    <meta name="twitter:image" content="/static/og-image.png" />
    <meta name="twitter:image:alt" content="Abstract teal and navy banner for nossl.sh" />
    <title>nossl.sh - Connection &amp; Header Diagnostics</title>
    <link rel="icon" href="/favicon.ico" type="image/svg+xml" />
    <link rel="stylesheet" href="/static/styles.css" />
  </head>
  <body>
    <header class="app-header">
      <div class="container header__inner">
        <div class="brand" aria-label="nossl.sh">
          <img src="/static/logo.svg" alt="nossl.sh logo" class="brand__logo" />
          <div class="brand__meta">
            <span class="brand__name">nossl.sh</span>
            <span class="brand__status">
              <span
                class="status-dot <%= scheme === 'https' ? 'status-dot--secure' : 'status-dot--insecure' %>"
                aria-hidden="true"
              ></span>
              You're online
            </span>
          </div>
        </div>
        <div class="header-status">
          <span class="status-pill <%= scheme === 'https' ? 'status-pill--secure' : 'status-pill--insecure' %>">
            <%= scheme.toUpperCase() %> connection
          </span>
          <p class="header-status__note"><%= status %></p>
        </div>
      </div>
    </header>

    <main class="container dashboard">
      <section aria-labelledby="connection-summary" class="panel panel--summary">
        <div class="panel__header">
          <h2 id="connection-summary">Connection summary</h2>
          <p>Essential details about the request reaching nossl.sh.</p>
        </div>
        <div class="metric-grid">
          <article class="card metric-card">
            <h3>Connection type</h3>
            <p class="metric-value"><%= scheme.toUpperCase() %></p>
            <p class="metric-meta">Protocol negotiated</p>
          </article>
          <article class="card metric-card">
            <h3>Client IP</h3>
            <p class="metric-value metric-value--ip"><%= clientIp %></p>
            <p class="metric-meta">Detected address</p>
          </article>
          <article class="card metric-card">
            <h3>Page timestamp</h3>
            <p class="metric-value metric-value--mono">
              <%= generatedAt.toISOString().replace('T', ' ').replace(/\..+/, ' UTC') %>
            </p>
            <p class="metric-meta">Generated on nossl.sh</p>
          </article>
          <article class="card metric-card">
            <h3>Ping</h3>
            <p class="metric-value metric-value--mono" data-api-latency aria-live="polite">Measuringâ€¦</p>
            <p class="metric-meta">Round-trip to request info API</p>
          </article>
          <article class="card metric-card metric-card--upcoming" aria-label="Geo IP insights coming soon">
            <h3>Geo IP insights</h3>
            <p class="metric-value metric-value--placeholder">Coming soon</p>
            <p class="metric-meta">City, region, ASN and more on the roadmap.</p>
          </article>
          <article class="card metric-card metric-card--upcoming" aria-label="Connection speed tests coming soon">
            <h3>Connection speed</h3>
            <p class="metric-value metric-value--placeholder">Coming soon</p>
            <p class="metric-meta">Throughput &amp; stability checks in development.</p>
          </article>
        </div>
      </section>

      <section aria-labelledby="request-headers" class="panel panel--headers">
        <div class="panel__header">
          <h2 id="request-headers">Request headers</h2>
          <div class="panel__actions">
            <button type="button" class="copy-button" data-copy-headers>Copy headers JSON</button>
          </div>
        </div>
        <p class="panel__intro">Key headers observed from your device.</p>
        <dl class="headers-list">
          <% primaryHeaders.forEach(([key, value]) => { %>
          <div class="headers-list__row">
            <dt><%= key %></dt>
            <dd><%= value %></dd>
          </div>
          <% }) %>
        </dl>
        <% if (secondaryHeaders.length) { %>
        <details class="headers-details">
          <summary>Show <%= secondaryHeaders.length %> more header<%= secondaryHeaders.length === 1 ? '' : 's' %></summary>
          <dl class="headers-list headers-list--secondary">
            <% secondaryHeaders.forEach(([key, value]) => { %>
            <div class="headers-list__row">
              <dt><%= key %></dt>
              <dd><%= value %></dd>
            </div>
            <% }) %>
          </dl>
        </details>
        <% } %>
      </section>

      <section aria-labelledby="how-to" class="panel panel--how-to">
        <div class="panel__header">
          <h2 id="how-to">Quick curl check</h2>
        </div>
        <p>
          Verify captive portal access or basic connectivity with a single command:
        </p>
        <pre><code>curl http://nossl.sh</code></pre>
      </section>

      <section aria-labelledby="usage-information" class="panel panel--about">
        <div class="panel__header">
          <h2 id="usage-information">Why this page exists</h2>
        </div>
        <p>
          nossl.sh is a fast-loading diagnostic page, inspired by NeverSSL, for confirming that HTTP
          traffic still works when HTTPS is blocked or intercepted. Launch it when captive portals fail
          to appear so you can trigger the network login screen manually.
        </p>
        <p>
          If the page won't load, double-check your Wi-Fi connection, confirm your internet service is
          running, and temporarily disable VPNs or custom DNS settings.
        </p>
        <p>
          Many detection workflows look for an open HTTP page. Keep nossl.sh handy as a fallback when
          browsers show certificate errors or devices need a memorable "no SSL" test URL.
        </p>
      </section>
    </main>

    <footer class="app-footer">
      <div class="container">
        <p>Page generated at <%= generatedAt.toISOString().replace('T', ' ').replace(/\..+/, ' UTC') %>.</p>
        <p>
          Prefer JSON? Try the
          <a href="/api/request-info" rel="nofollow">request info API endpoint</a>.
        </p>
      </div>
    </footer>

    <script type="application/json" id="headers-json"><%= JSON.stringify(headersObject).replace(/</g, '\\u003c') %></script>
    <script>
      const latencyEl = document.querySelector('[data-api-latency]');
      const headersScript = document.getElementById('headers-json');
      const copyButton = document.querySelector('[data-copy-headers]');

      if (latencyEl) {
        const startedAt = performance.now();
        fetch('/api/request-info', { headers: { Accept: 'application/json' } })
          .then((response) => {
            const elapsed = Math.round(performance.now() - startedAt);
            latencyEl.textContent = `${elapsed} ms`;

            if (!response.ok) {
              throw new Error('Response not OK');
            }
          })
          .catch(() => {
            latencyEl.textContent = 'Unable to measure';
          });
      }

      if (copyButton && headersScript) {
        const headersJson = headersScript.textContent;
        copyButton.addEventListener('click', async () => {
          try {
            await navigator.clipboard.writeText(headersJson);
            copyButton.textContent = 'Copied!';
            copyButton.classList.add('copy-button--success');
            setTimeout(() => {
              copyButton.textContent = 'Copy headers JSON';
              copyButton.classList.remove('copy-button--success');
            }, 2000);
          } catch (error) {
            copyButton.textContent = 'Copy failed';
            copyButton.classList.add('copy-button--error');
            setTimeout(() => {
              copyButton.textContent = 'Copy headers JSON';
              copyButton.classList.remove('copy-button--error');
            }, 2000);
          }
        });
      }
    </script>
  </body>
</html>

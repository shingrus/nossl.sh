<!DOCTYPE html>
<html lang="en">
  <head>
      <script type="application/ld+json">
          {
              "@context":"https://schema.org",
              "@type":"SoftwareApplication",
              "name":"nossl.sh",
              "applicationCategory":"DeveloperApplication",
              "operatingSystem":"Windows, macOS, Linux",
              "offers":{"@type":"Offer","price":"0","priceCurrency":"USD"},
              "url":"https://nossl.sh/",
              "publisher":{
                  "@type":"Organization",
                  "name":"nossl.sh",
                  "url":"https://nossl.sh/"
              }
          }
      </script>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta
      name="description"
      content="nossl.sh helps you diagnose no SSL connection issues, check your Wi-Fi, verify internet access, troubleshoot captive portal login pages, and inspect the headers your device sends."
    />
    <meta
      name="keywords"
      content="no ssl, nossl, never ssl alternative, captive portal login, hotel wifi login, airport wifi, coffee shop wifi, http test page"
    />
    <meta property="og:title" content="nossl.sh - Connection &amp; Header Diagnostics" />
    <meta
            property="og:description"
            content="nossl.sh helps you diagnose no SSL connection issues, check your Wi-Fi, verify internet access, troubleshoot captive portal login pages, and inspect the headers your device sends."
    />
    <meta property="og:type" content="website" />
    <meta property="og:url" content="http://nossl.sh/" />
    <meta property="og:site_name" content="nossl.sh" />
    <meta property="og:image" content="/static/og-image.png" />
    <meta property="og:image:alt" content="Abstract teal and navy banner for nossl.sh" />
    <meta property="og:image:width" content="1200" />
    <meta property="og:image:height" content="630" />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content="nossl.sh - Connection &amp; Header Diagnostics" />
    <meta
            name="twitter:description"
            content="nossl.sh helps you diagnose no SSL connection issues, check your Wi-Fi, verify internet access, troubleshoot captive portal login pages, and inspect the headers your device sends."
    />
    <meta name="twitter:image" content="/static/og-image.png" />
    <meta name="twitter:image:alt" content="Abstract teal and navy banner for nossl.sh" />
    <title>nossl.sh - Connection &amp; Header Diagnostics</title>
    <link rel="icon" href="/favicon.ico" type="image/svg+xml" />
    <link rel="stylesheet" href="/static/styles.css" />
  </head>
  <body>
    <header class="top-bar">
      <div class="container top-bar__inner">
        <div class="branding" role="banner">
          <pre class="logo" aria-hidden="true">╔═══╗
║ <span class="logo-dot">●</span> ║
╚═══╝</pre>
          <div class="branding__copy">
            <pre class="brand-name">[ nossl.sh ]</pre>
            <pre class="brand-status">  ✓ Connected </pre>
          </div>
        </div>
        <p class="top-bar__hint">// Trigger the captive hotel/airport Wi‑Fi login page, no HTTPS, no HSTS //</p>
      </div>
    </header>

    <main class="container dashboard">
      <section aria-labelledby="connection-info" class="panel panel--connection">
        <header class="panel__header">
          <h2 id="connection-info">╔═══════════════════════╗
║ CONNECTION SNAPSHOT   ║
╚═══════════════════════╝</h2>
          <span class="status <%= scheme === 'https' ? 'secure' : 'insecure' %>">
            [ <%= status %> ]
          </span>
        </header>

        <p class="panel__summary">
          >> Request served over <strong><%= scheme.toUpperCase() %></strong>. These numbers refresh each time you load the page.
        </p>

        <dl class="connection-grid">
          <div>
            <dt>Connection type</dt>
            <dd><%= scheme.toUpperCase() %></dd>
          </div>
          <div>
            <dt>Client IP</dt>
            <dd class="mono"><%= clientIp %></dd>
          </div>
          <div>
            <dt>Page timestamp</dt>
            <dd class="mono"><%= generatedAt.toISOString().replace('T', ' ').replace(/\..+/, ' UTC') %></dd>
          </div>
          <div>
            <dt>Ping time</dt>
            <dd class="mono" data-api-latency aria-live="polite">Measuring…</dd>
          </div>
        </dl>
      </section>

      <section aria-labelledby="request-headers" class="panel panel--headers">
        <header class="panel__header">
          <div>
            <h2 id="request-headers">╔═══════════════════╗
║ REQUEST HEADERS   ║
╚═══════════════════╝</h2>
            <p class="panel__summary">>> Compact view of the headers we saw from your device.</p>
          </div>
          <button type="button" class="copy" data-copy-headers>
            [ COPY AS JSON ]
          </button>
        </header>
        <div class="table-wrapper">
          <table>
            <thead>
              <tr>
                <th scope="col">Header</th>
                <th scope="col">Value</th>
              </tr>
            </thead>
            <tbody>
              <% headers.forEach(([key, value]) => { %>
              <tr>
                <th scope="row"><%= key %></th>
                <td><%= value %></td>
              </tr>
              <% }) %>
            </tbody>
          </table>
        </div>
      </section>

      <section aria-labelledby="how-to" class="panel panel--actions">
        <header class="panel__header">
          <h2 id="how-to">╔══════════════════╗
║ QUICK ACTIONS    ║
╚══════════════════╝</h2>
        </header>
        <div class="actions-grid">
          <div>
            <h3>┌─[ TEST WITH CURL ]─┐</h3>
            <p>>> Verify plain HTTP access from your shell:</p>
            <div class="code-snippet" data-curl-snippet>
              <button
                type="button"
                class="copy copy--snippet"
                data-copy-curl
                aria-label="Copy curl command"
              >
                [ COPY ]
              </button>
              <pre><code>$ curl http://nossl.sh</code></pre>
            </div>
          </div>
          <div>
            <h3>┌─[ UP NEXT ]─┐</h3>
            <p class="panel__summary">
              >> Geo IP lookups, connection speed checks, and other insight cards will live here soon. The layout is ready for more
              data without adding clutter.
            </p>
          </div>
        </div>
      </section>

      <section aria-labelledby="usage-information" class="panel panel--support">
        <header class="panel__header">
          <h2 id="usage-information">╔═══════════════════════╗
║ WHY THIS PAGE EXISTS  ║
╚═══════════════════════╝</h2>
        </header>
        <div class="panel__body">
          <p>
            >> Inspired by NeverSSL, nossl.sh is a quick diagnostic checkpoint when captive portals or restrictive firewalls block
            HTTPS handshakes. Load this page to trigger splash screens and inspect what your device sends.
          </p>
          <p>
            >> Still stuck? Confirm your Wi-Fi link, temporarily disable VPNs, or retry after clearing custom DNS profiles.
          </p>
          <p>
            >> Keep this URL handy for smart TVs, consoles, or travel routers that need an HTTP-only landing page to finish login
            flows.
          </p>
        </div>
      </section>
    </main>

    <footer>
      <div class="container">
        <pre class="footer-art">════════════════════════════════════════════════════════════════════════════════</pre>
        <p>// Page generated at <%= generatedAt.toISOString().replace('T', ' ').replace(/\..+/, ' UTC') %> //</p>
        <p>
          >> Prefer JSON? Try the
          <a href="/api/request-info" rel="nofollow">[ request info API endpoint ]</a>.
        </p>
        <p>>> Overall requests served: <span class="mono"><%= totalRequests.toLocaleString('en-US') %></span></p>
        <pre class="footer-art">════════════════════════════════════════════════════════════════════════════════</pre>
      </div>
    </footer>
    <script>
      const latencyEl = document.querySelector('[data-api-latency]');
      const headersCopyButton = document.querySelector('[data-copy-headers]');
      const curlCopyButton = document.querySelector('[data-copy-curl]');

      if (latencyEl) {
        const startedAt = performance.now();
        fetch('/api/request-info', { headers: { Accept: 'application/json' } })
          .then((response) => {
            const elapsed = Math.round(performance.now() - startedAt);
            latencyEl.textContent = `${elapsed} ms`;

            if (!response.ok) {
              throw new Error('Response not OK');
            }
          })
          .catch(() => {
            latencyEl.textContent = 'Unable to measure';
          });
      }

      const fallbackCopyText = (text) => {
        const textarea = document.createElement('textarea');
        textarea.value = text;
        textarea.setAttribute('readonly', '');
        textarea.style.position = 'absolute';
        textarea.style.left = '-9999px';
        document.body.appendChild(textarea);

        const selection = window.getSelection();
        if (selection && selection.rangeCount) {
          selection.removeAllRanges();
        }

        textarea.select();

        try {
          successful = document.execCommand('copy');
        } catch (error) {
          successful = false;
        }

        document.body.removeChild(textarea);
        return successful;
      };

      const copyText = async (text) => {
        if (navigator.clipboard && typeof navigator.clipboard.writeText === 'function') {
          try {
            await navigator.clipboard.writeText(text);
            return true;
          } catch (error) {
            // fall back to execCommand
          }
        }

        return fallbackCopyText(text);
      };

      if (headersCopyButton) {
        const headerPairs = <%- JSON.stringify(headers) %>;
        const headersPayload = headerPairs.reduce((acc, [key, value]) => {
          if (acc[key]) {
            acc[key] = Array.isArray(acc[key]) ? [...acc[key], value] : [acc[key], value];
          } else {
            acc[key] = value;
          }
          return acc;
        }, {});

        headersCopyButton.addEventListener('click', async () => {
          const copied = await copyText(JSON.stringify(headersPayload, null, 2));
          headersCopyButton.textContent = copied ? '[ COPIED! ]' : '[ COPY FAILED ]';
          setTimeout(() => {
            headersCopyButton.textContent = '[ COPY AS JSON ]';
          }, 2000);
        });
      }

      if (curlCopyButton) {
        const curlCommand =  'curl http://nossl.sh';
        const resetLabel = () => {
          curlCopyButton.textContent = '[ COPY ]';
        };

        curlCopyButton.addEventListener('click', async () => {
          const copied = await copyText(curlCommand);
          curlCopyButton.textContent = copied ? '[ COPIED! ]' : '[ COPY FAILED ]';
          setTimeout(resetLabel, 2000);
        });
      }
    </script>
  </body>
</html>
